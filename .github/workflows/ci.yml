name: 👷 Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:

env:
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress

jobs:
  preinstall:
    name: 🏗️ Preparation
    runs-on: ubuntu-latest

    steps:
      - name: 🔍️ Checkout
        uses: actions/checkout@v4

      - name: 👷 Prepare CI
        uses: ./.github/actions/prepare
        with:
          cache_lookup_only: true
          cache_node_modules_key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: 🔒️ Cache Cypress
        id: cache-cypress
        uses: actions/cache@v3
        with:
          lookup-only: true
          path: '${{ github.workspace }}/.cypress'
          key: cypress

      - name: 📦️ Install Cypress
        if: steps.cache-cypress.outputs.cache-hit != 'true'
        run: npx cypress install

  test:
    name: ✅ Tests
    needs: preinstall
    runs-on: ubuntu-latest
    steps:
      - name: 🔍️ Checkout
        uses: actions/checkout@v4

      - name: 👷 Prepare CI
        uses: ./.github/actions/prepare
        with:
          cache_node_modules_key: node-modules-${{ hashFiles('package-lock.json') }}

      - uses: nrwl/nx-set-shas@v4

      - name: 💄 Check code formatting by using prettier config
        run: npx nx format:check

      - name: 🚨 Lint
        if: github.event_name == 'push'
        run: npx nx run-many --target=lint

      - name: 🚨 Lint
        if: github.event_name == 'pull_request'
        run: npx nx affected --target=lint

      - name: ✅ Tests
        if: github.event_name == 'push'
        run: npx nx run-many --target=test --ci --runInBand

      - name: ✅ Tests
        if: github.event_name == 'pull_request'
        run: npx nx affected --target=test --ci --runInBand

  e2e:
    name: 📸 End-to-End Testing
    needs: preinstall
    runs-on: ubuntu-latest
    steps:
      - name: 🔍️ Checkout
        uses: actions/checkout@v4

      - name: 👷 Prepare CI
        uses: ./.github/actions/prepare
        with:
          cache_node_modules_key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: 🔒️ Cache Cypress
        id: cache-cypress
        uses: actions/cache@v3
        with:
          path: '${{ github.workspace }}/.cypress'
          key: cypress

      - name: 📦️ Install Cypress
        if: steps.cache-cypress.outputs.cache-hit != 'true'
        run: npx cypress install

      - uses: nrwl/nx-set-shas@v4

      - name: 📸 e2e
        if: github.event_name == 'push'
        run: npx nx run-many --target=e2e --parallel=1

      - name: 📸 e2e
        if: github.event_name == 'pull_request'
        run: npx nx affected --target=2e2 --parallel=1

  build:
    name: 📦️ Build
    needs: preinstall
    runs-on: ubuntu-latest
    steps:
      - name: 🔍️ Checkout
        uses: actions/checkout@v4

      - name: 👷 Prepare CI
        uses: ./.github/actions/prepare
        with:
          cache_node_modules_key: node-modules-${{ hashFiles('package-lock.json') }}

      - uses: nrwl/nx-set-shas@v4

      - name: 📦️ Build
        if: github.event_name == 'push'
        run: npx nx run-many --target=build

      - name: 📦️ Build
        if: github.event_name == 'pull_request'
        run: npx nx affected --target=build

  release:
    name: 🔖 Release
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    needs: ['preinstall', 'test', 'e2e', 'build']

    steps:
      - name: 🔍️ Checkout
        uses: actions/checkout@v4

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: 👷 Prepare CI
        uses: ./.github/actions/prepare
        with:
          cache_node_modules_key: node-modules-${{ hashFiles('package-lock.json') }}
          git_bot_token: ${{ steps.app-token.outputs.token }}

      - name: Release
        uses: ./.github/actions/release
        with:
          github_token: ${{ steps.app-token.outputs.token }}
